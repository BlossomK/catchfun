<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

  	  <resultMap id="memberResultSet" type="Member">
  	  		<id column="USER_NO" property="userNo"/>
  	  		<result column="user_id" property="userId"/>
  	  		<result column="user_pwd" property="userPwd"/>
  	  		<result column="USER_TYPE" property="userType"/>
  	  		<result column="user_name" property="userName"/>
  	  		<result column="email" property="email"/>
  	  		<result column="PHONE" property="phone"/>
  	  		<result column="USER_ENROLLDATE" property="enrollDate"/>
  	  		<result column="address" property="address"/>
  	  		<result column="ADDRESSNUM" property="addressNum"/>
  	  		<result column="USER_POINT" property="point"/>
  	  		<result column="STATUS" property="status"/>
  	  		<result column="REASON" property="reason"/>
  	  </resultMap>
  	  
  	  <resultMap id="projectQuestionResultSet" type="Question">
		<id column="A_QUESTION_NO" property="questionNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="QUESTION_TYPE" property="questionType"/>
		<result column="QUESTION_TITLE" property="questionTitle"/>
		<result column="QUESTION_CONTENT" property="questionContent"/>
		<result column="QUESTION_DATE" property="questionDate"/>
		<result column="QUESTION_YN" property="questionYn"/>
		<result column="QUESTION_STATUS" property="questionStatus"/>
		<result column="ANS_TITLE" property="ansTitle"/>
		<result column="ANS_CONTENT" property="ansContent"/>
		<result column="ANS_DATE" property="ansDate"/>
		<result column="ANS_NO" property="ansNo"/>
		<result column="COUNSELING" property="counseling"/>
	</resultMap>
	
	<resultMap id="myWishResultSet" type="MyWish">
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="MAKER_NAME" property="makerName"/>
		<result column="PROJECT_CATEGORY_NAME" property="projectCategoryName"/>
		<result column="PROJECT_NAME" property="projectName"/>
	</resultMap>
		
  
	  <select id="loginMember" resultMap="memberResultSet" parameterType="Member">
			<!-- 암호화전 -->
			<!-- 
			select *
			  from member  
			 where user_id=#{userId}
			   and user_pwd=#{userPwd} 
			   and status='Y' -->
			<!-- 암호화 후 -->
			select *
			  from member  
			 where user_id=#{userId}
			   and status='Y'
	  </select>
	  
	  <insert id="insertMember" parameterType="Member">
	  		insert into member
	  		values('M'||SEQ_MNO.NEXTVAL, #{userId}, #{userPwd}, default, #{userName}, null, #{phone}, default, #{address}, #{addressNum}, 0, default, null, #{addressDetail}, #{addressReference})
	  </insert>
	  
	  <update id="updateMember" parameterType="Member">
	  		update member
	  		   set EMAIL=#{email}, 
	  		       PHONE=#{phone},
	  		       ADDRESS=#{address},
	  		       ADDRESSNUM=#{addressNum},
	  		       ADDRESS_DETAIL=#{addressDetail},
	  		       ADDRESS_REFERENCE=#{addressReference}
	  		 where USER_ID=#{userId}    
	  </update>
	  
	  <select id="idCheck" parameterType="string" resultType="_int">
	  		select count(*)
	  		  from member
	  		 where USER_ID=#{userId}
	  </select>
	  
	  <update id="deleteMember" parameterType="Member">
	  		update MEMBER
	  		   set REASON=#{reason}, STATUS='N'
	  		 where USER_NO=#{userNo}
	  </update>
	  
	  <!-- 메세지 -->
	  
	  <select id="sellerMessageRestListCount" resultType="_int" parameterType="string">
		select count(*)
		  from PERSON_QUESTION
		 where QUESTION_STATUS='N' AND COUNSELING=#{counseling}
	</select>
	
	<select id="sellerMessageRestList" resultMap="projectQuestionResultSet" parameterType="string">
		select A_QUESTION_NO, user_id, QUESTION_TYPE, QUESTION_TITLE, QUESTION_CONTENT, QUESTION_DATE, QUESTION_YN, QUESTION_STATUS, ANS_TITLE, ANS_CONTENT, ANS_DATE, ANS_NO, COUNSELING
		from PERSON_QUESTION
		join MEMBER using (user_no)
		where QUESTION_STATUS='N' and COUNSELING=#{counseling}
		order by QUESTION_DATE desc
	</select>
	
	<select id="MessageRestListCount" resultType="_int" parameterType="string">
		select count(*)
		  from PERSON_QUESTION
		 where QUESTION_STATUS='N' AND USER_NO=#{userNo}
	</select>
	
	<select id="MessageRestList" resultMap="projectQuestionResultSet" parameterType="string">
		select A_QUESTION_NO, user_id, QUESTION_TYPE, QUESTION_TITLE, QUESTION_CONTENT, QUESTION_DATE, QUESTION_YN, QUESTION_STATUS, ANS_TITLE, ANS_CONTENT, ANS_DATE, ANS_NO, COUNSELING
		from PERSON_QUESTION
		join MEMBER using (user_no)
		where QUESTION_STATUS='N' and USER_NO=#{userNo}
		order by QUESTION_DATE desc
	</select>
	 
	 
<!-- 	<update id="increaseCount" parameterType="string">
		update PERSON_QUESTION
		   set count = count + 1
		  where A_QUESTION_NO = #{qno} and QUESTION_STATUS='N'
	</update> -->
	
	<select id="selectMessage" parameterType="string" resultMap="projectQuestionResultSet">
		select A_QUESTION_NO, user_id, QUESTION_TYPE, QUESTION_TITLE, QUESTION_CONTENT, QUESTION_DATE, QUESTION_YN, QUESTION_STATUS, ANS_TITLE, ANS_CONTENT, ANS_DATE, ANS_NO, COUNSELING
		from PERSON_QUESTION
		join MEMBER using (user_no)
		where A_QUESTION_NO = #{qno} and QUESTION_STATUS='N'
	</select>
	
	<update id="deleteMessage" parameterType="string">
		update PERSON_QUESTION
		  set QUESTION_STATUS='Y'
		where A_QUESTION_NO=#{qno} 
	</update>
	
	<select id="messageUpdateForm" parameterType="string" resultMap="projectQuestionResultSet">
		select A_QUESTION_NO, user_id, QUESTION_TYPE, QUESTION_TITLE, QUESTION_CONTENT, QUESTION_DATE, QUESTION_YN, QUESTION_STATUS, ANS_TITLE, ANS_CONTENT, ANS_DATE, ANS_NO, COUNSELING 
		from PERSON_QUESTION
		join MEMBER using (user_no)
		where A_QUESTION_NO = #{qno} and QUESTION_STATUS='N'
	</select>

	<update id="updateMessage" parameterType="Question">
		update PERSON_QUESTION
		  set QUESTION_TITLE=#{questionTitle},
		  	  QUESTION_CONTENT=#{questionContent}
		where A_QUESTION_NO=#{questionNo} 
	</update>
	
	<select id="selectReplyList" parameterType="string" resultMap="projectQuestionResultSet">
		select *
		 from PERSON_QUESTION
		 where A_QUESTION_NO = #{qno} and QUESTION_STATUS='N' and QUESTION_YN='Y'
		 
	</select>
	
	<update id="insertReply" parameterType="Question">
		update PERSON_QUESTION
		set ANS_CONTENT=#{ansContent}, QUESTION_YN='Y', ANS_NO=#{ansNo}, ANS_DATE=default
		where A_QUESTION_NO=#{questionNo}
	</update>
	  
 	<update id="deleteAnswer" parameterType="string">
		update PERSON_QUESTION
		set QUESTION_YN='N'
		where QUESTION_YN='Y' and A_QUESTION_NO=#{qno} 
	</update> 
	
	
	<select id="idFindMember" parameterType="Member" resultMap="memberResultSet">
		select USER_ID
		 from MEMBER
		 where USER_NAME = #{userName} and phone = #{phone} and STATUS='Y'
	</select>
	
	<select id="myWishList" parameterType="string" resultMap="myWishResultSet">
		 select CHANGE_NAME, MAKER_NAME, PROJECT_CATEGORY_NAME, PROJECT_NAME
		 from WISHLIST W
		 join PROJECT P on (W.PROJECT_NUMBER=P.PROJECT_NUMBER)
		 join CATEGORY_TYPE using (PROJECT_CATEGORY)
		 join PROJECT_MAKER PM on (P.PROJECT_NUMBER=PM.PROJECT_NUMBER) 
		 join ATTACHMENT on (W.PROJECT_NUMBER=REF_NO)
		 where W.user_no=#{userNo}
	 </select>
	
	
<!-- 	<delete id="deleteAnswer" parameterType="string">
		delete from  PERSON_QUESTION
		where ANS_NO=#{ansNo}  
	</delete>  -->
	 
	 <select id="pwdFind" parameterType="Member" resultType="_int">
		 select COUNT(*) 
		 from MEMBER
		 where USER_ID=#{userId} and USER_Name=#{userName} and PHONE=#{phone} 
	 </select>
	 
	 <update id="updatePwd" parameterType="Member">
		update MEMBER
		set USER_PWD=#{changePwd} 
		where USER_ID=#{userId}
	</update>
	  
	  <!-- 이메일!! -->
	  
</mapper>






